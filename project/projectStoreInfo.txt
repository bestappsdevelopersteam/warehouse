4. Магазин
Искаме да изградим софтуер за работа в магазин.
 
В системата ще има два вида потребители - служители и обикновени клиенти. При стартиране на програмата (след зареждане на данните, което се обяснява по-надолу в описанието на задачата) на потребителя се дава възможност да избере като какъв иска да я използва. Всеки служител има уникално employee_id. Всяка стока има уникално product_id. Информация за клиентите не се съхранява. 

Системата може да чете стоките от .csv файл и да ги парсва към джава обекти, които могат да бъдат манипулирани. Данните за категориите са записани в отделни файлове, път към които трябва да се въвежда при стартиране на програмата. За целта на този проект ще работим с два вида .csv файла, чиято структура ще е следната: 


1.	Данни за стоките: 

product_id,name,price,quantity,type,color,expires_in

Пример за файл:
id,name,price,quantity,type,color,expiration_date
1,oranges,0.10,500,food,,06-07-2021
2,toilet paper,2.50,150,sanitary,,
3,lipstick,6.80,15,makeup,red,04-02-2025
4,dog leash,10.30,6,others,blue,

Видовете продукти са следните:
•	Храни (food)
•	Напитки (drinks)
•	Санитарни (sanitary)
•	Грим (makeup)
•	Аксесоари, декорация, други (others)

Важно е да се отбележи, че различните категории продукти имат различни характеристики и структура. 


2.	Данни за служителите:
 	employee_id,first_name,last_name,age,salary
	
	Пример за файл:
	employee_id,first_name,last_name,age,salary
	1,Ivan,Ivanov,45,550
	2,Maria,Ivanova,22,450
3,Angel,Petkov,50,750

След като потребителят отвори програмата, му се дава възможност да напише имената на файловете, от който да бъде прочетена информацията за продуктите и служителите. След като те бъдат заредени в програмата, на потребителя се предоставя опцията да влезе като служител или да продължи като клиент. 

Вход като служител:
•	Системата подканва служителя да въведе своето id и име 
•	При неуспешен вход, потребителят отново се приканва да въведе своите данни до успешно въведена комбинация
•	При успешен вход (служител с такива данни съществува в системата) пред служителя се поставя възможността за избор от меню с опции
•	Системата да дава възможност за следните операции: 
•	Принтиране на всички продукти
•	Принтиране на всички продукти, сортирани по:
o	име
o	цена 
o	срок на годност (за продуктите, които имат такъв, най-скоро изтичащите спрямо днешната дата се принтират първи)
•	Принтиране на определен продукт (по id, име)
•	Принтиране на всички продукти с цена, по-висока или равна на зададена от потребителя цена
•	Принтиране на всички продукти с цена, по-ниска от зададена от потребителя цена
•	Принтиране на всички продукти с количество, по-голямо или равно на зададено от потребителя количество
•	Принтиране на всички продукти с количество, по-малко от зададено от потребителя количество
•	Добавяне на продукт
•	Промяна на цената на продукт (по id)
•	Промяна на количеството на продукт (по id)
•	Промяна на името на продукт (по id)
•	Изтриване на продукт (по id, не е нужно id-тата на другите продукти да се променят при това действие)
•	Сортиране на служителите по:
o	име
o	заплата 
След като служителят приключи с работата си по продуктите, той трябва да има възможност за “save”, при която новият списък от продукти се записва в нов файл с име timestamp.csv, където timestamp е точното време на записване на документа.

Вход като клиент:
•	Принтиране на всички налични продукти (с количество поне 1)
•	Търсене на продукт по категория
•	Търсене на продукт по име (както пълно съвпадение, така и частично)
•	Добавяне към потребителската кошница по правилно подадено product_id и количество (ако желаното количеството продукти не е налично, да се показва съобщение за грешка)
•	Калкулиране на крайната цена на база на всички продукти в кошницата 

След като потребителят “купи” продуктите си (не имплементираме функционалност за плащане), данните в .csv файла трябва да се актуализират. Новият списък от продукти се записва в нов файл с име timestamp.csv, където timestamp е точното време на записване на документа.

